########################################################################################################

# You may need to create a .env.local file in the root directory of the project and add the following
# environment variables to it to run the project locally ('npm run dev'). You can copy the contents of
# this file and paste them into the .env.local file.

# Note that you can choose to use either a local MongoDB database (running on Docker) or MongoDB Atlas.

########################################################################################################

# Running the project locally using MongoDB Atlas (recommended):

# You can also just use the following connection string for MongoDB Atlas in the .env.local file:

DATABASE_URL="mongodb+srv://bads:asdfghjkl;'@cluster0.snloizm.mongodb.net/pao?retryWrites=true&w=majority&appName=Cluster0"

# Then you can run the project locally using the following command:

# npm run dev

########################################################################################################

# Running the project locally using a local MongoDB database (running on Docker):

# If you want to run the project locally, you need to create a .env.local file in the root directory of
# the project along with .env and add the following environment variables to it.

# DB_NAME=pao
# DB_HOST=localhost
# DB_PORT=27017
# DB_USERNAME=admin
# DB_PASSWORD=password

# DATABASE_URL=mongodb://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?maxPoolSize=20&w=majority&authSource=admin

# After creating the .env.local file, you can run the project locally using the following command:

# docker compose up database
# npm run dev
