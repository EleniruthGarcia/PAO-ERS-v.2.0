services:
  app:
    image: d4n13lxd4v1d/pao-ers
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - database
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    environment:
      ORIGIN: ${APP_ORIGIN}
      DATABASE_URL: ${DATABASE_URL}
  database:
    image: mongo
    restart: unless-stopped
    volumes:
      - mongodb:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - ${DB_PORT}:27017
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27017" ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    environment:
      WATCHTOWER_LABEL_ENABLE: 1
      WATCHTOWER_SCHEDULE: '* * * * *'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongodb:
